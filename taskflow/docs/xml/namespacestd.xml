<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacestd" kind="namespace" language="C++">
    <compoundname>std</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_sub_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_and_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_and_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_xor_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_xor_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_xor_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/set_unexpected_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_unexpected</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_unexpected</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fputs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fputs</definition>
        <argsstring>(T... args)</argsstring>
        <name>fputs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/modf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::modf</definition>
        <argsstring>(T... args)</argsstring>
        <name>modf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/functional/not2_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::not2</definition>
        <argsstring>(T... args)</argsstring>
        <name>not2</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strlen_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strlen</definition>
        <argsstring>(T... args)</argsstring>
        <name>strlen</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/exp2_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::exp2</definition>
        <argsstring>(T... args)</argsstring>
        <name>exp2</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/setiosflags_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setiosflags</definition>
        <argsstring>(T... args)</argsstring>
        <name>setiosflags</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/adjacent_difference_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::adjacent_difference</definition>
        <argsstring>(T... args)</argsstring>
        <name>adjacent_difference</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/cos_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::cos</definition>
        <argsstring>(T... args)</argsstring>
        <name>cos</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fwscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>fwscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_init_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_init</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_init</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/tuple/forward_as_tuple_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::forward_as_tuple</definition>
        <argsstring>(T... args)</argsstring>
        <name>forward_as_tuple</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/abort_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::abort</definition>
        <argsstring>(T... args)</argsstring>
        <name>abort</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsncmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsncmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsncmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/set_intersection_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_intersection</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_intersection</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_signal_fence_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_signal_fence</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_signal_fence</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/abs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::llabs</definition>
        <argsstring>(T... args)</argsstring>
        <name>llabs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/make_move_iterator_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::make_move_iterator</definition>
        <argsstring>(T... args)</argsstring>
        <name>make_move_iterator</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::scanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>scanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/nextafter_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nextafter</definition>
        <argsstring>(T... args)</argsstring>
        <name>nextafter</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stol</definition>
        <argsstring>(T... args)</argsstring>
        <name>stol</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strcspn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strcspn</definition>
        <argsstring>(T... args)</argsstring>
        <name>strcspn</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/ungetwc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ungetwc</definition>
        <argsstring>(T... args)</argsstring>
        <name>ungetwc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/transform_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::transform</definition>
        <argsstring>(T... args)</argsstring>
        <name>transform</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fputc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::putc</definition>
        <argsstring>(T... args)</argsstring>
        <name>putc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswdigit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswdigit</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswdigit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/rint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rint</definition>
        <argsstring>(T... args)</argsstring>
        <name>rint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/memset_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::memset</definition>
        <argsstring>(T... args)</argsstring>
        <name>memset</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isgraph_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isgraph</definition>
        <argsstring>(T... args)</argsstring>
        <name>isgraph</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/replace_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::replace_copy_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>replace_copy_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/scalbn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::scalbn</definition>
        <argsstring>(T... args)</argsstring>
        <name>scalbn</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/partial_sort_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::partial_sort_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>partial_sort_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/make_exception_ptr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::make_exception_ptr</definition>
        <argsstring>(T... args)</argsstring>
        <name>make_exception_ptr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/frexp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::frexp</definition>
        <argsstring>(T... args)</argsstring>
        <name>frexp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isxdigit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isxdigit</definition>
        <argsstring>(T... args)</argsstring>
        <name>isxdigit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_exchange_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_exchange_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_exchange_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>wprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fdim_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fdim</definition>
        <argsstring>(T... args)</argsstring>
        <name>fdim</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wctype_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wctype</definition>
        <argsstring>(T... args)</argsstring>
        <name>wctype</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbrtoc32_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbrtoc32</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbrtoc32</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/setw_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setw</definition>
        <argsstring>(T... args)</argsstring>
        <name>setw</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/get_temporary_buffer_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_temporary_buffer</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_temporary_buffer</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fmax_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fmax</definition>
        <argsstring>(T... args)</argsstring>
        <name>fmax</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_thread_fence_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_thread_fence</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_thread_fence</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_exchange_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_exchange</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_exchange</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fgetwc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fgetwc</definition>
        <argsstring>(T... args)</argsstring>
        <name>fgetwc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::swprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>swprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/prev_permutation_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::prev_permutation</definition>
        <argsstring>(T... args)</argsstring>
        <name>prev_permutation</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/max_element_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::max_element</definition>
        <argsstring>(T... args)</argsstring>
        <name>max_element</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/set_symmetric_difference_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_symmetric_difference</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_symmetric_difference</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcscpy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcscpy</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcscpy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/shared_ptr/pointer_cast_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::const_pointer_cast</definition>
        <argsstring>(T... args)</argsstring>
        <name>const_pointer_cast</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/minmax_element_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::minmax_element</definition>
        <argsstring>(T... args)</argsstring>
        <name>minmax_element</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstok_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstok</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstok</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/functional/ref_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ref</definition>
        <argsstring>(T... args)</argsstring>
        <name>ref</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feupdateenv_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::feupdateenv</definition>
        <argsstring>(T... args)</argsstring>
        <name>feupdateenv</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/endl_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::endl</definition>
        <argsstring>(T... args)</argsstring>
        <name>endl</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/end_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::end</definition>
        <argsstring>(T... args)</argsstring>
        <name>end</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wmemmove_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wmemmove</definition>
        <argsstring>(T... args)</argsstring>
        <name>wmemmove</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fmin_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fmin</definition>
        <argsstring>(T... args)</argsstring>
        <name>fmin</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/uninitialized_fill_n_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::uninitialized_fill_n</definition>
        <argsstring>(T... args)</argsstring>
        <name>uninitialized_fill_n</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/uppercase_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nouppercase</definition>
        <argsstring>(T... args)</argsstring>
        <name>nouppercase</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/showpos_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::noshowpos</definition>
        <argsstring>(T... args)</argsstring>
        <name>noshowpos</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/ctime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ctime</definition>
        <argsstring>(T... args)</argsstring>
        <name>ctime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wmemset_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wmemset</definition>
        <argsstring>(T... args)</argsstring>
        <name>wmemset</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswpunct_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswpunct</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswpunct</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/pop_heap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::pop_heap</definition>
        <argsstring>(T... args)</argsstring>
        <name>pop_heap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>sprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/fixed_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fixed</definition>
        <argsstring>(T... args)</argsstring>
        <name>fixed</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/shared_ptr/make_shared_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::make_shared</definition>
        <argsstring>(T... args)</argsstring>
        <name>make_shared</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/make_heap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::make_heap</definition>
        <argsstring>(T... args)</argsstring>
        <name>make_heap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fmod_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fmod</definition>
        <argsstring>(T... args)</argsstring>
        <name>fmod</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/atoi_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atol</definition>
        <argsstring>(T... args)</argsstring>
        <name>atol</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/uninitialized_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::uninitialized_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>uninitialized_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/shared_ptr/pointer_cast_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::dynamic_pointer_cast</definition>
        <argsstring>(T... args)</argsstring>
        <name>dynamic_pointer_cast</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/set_union_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_union</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_union</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/fixed_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::hexfloat</definition>
        <argsstring>(T... args)</argsstring>
        <name>hexfloat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfwprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vswprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vswprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/asctime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::asctime</definition>
        <argsstring>(T... args)</argsstring>
        <name>asctime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswspace_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswspace</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswspace</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/nan_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nan</definition>
        <argsstring>(T... args)</argsstring>
        <name>nan</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/sort_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sort</definition>
        <argsstring>(T... args)</argsstring>
        <name>sort</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/quick_exit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::quick_exit</definition>
        <argsstring>(T... args)</argsstring>
        <name>quick_exit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/log10_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::log10</definition>
        <argsstring>(T... args)</argsstring>
        <name>log10</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbstowcs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbstowcs</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbstowcs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isspace_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isspace</definition>
        <argsstring>(T... args)</argsstring>
        <name>isspace</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strncat_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strncat</definition>
        <argsstring>(T... args)</argsstring>
        <name>strncat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/isinf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isinf</definition>
        <argsstring>(T... args)</argsstring>
        <name>isinf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/atof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atof</definition>
        <argsstring>(T... args)</argsstring>
        <name>atof</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/erf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::erf</definition>
        <argsstring>(T... args)</argsstring>
        <name>erf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/is_sorted_until_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::is_sorted_until</definition>
        <argsstring>(T... args)</argsstring>
        <name>is_sorted_until</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/cbrt_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::cbrt</definition>
        <argsstring>(T... args)</argsstring>
        <name>cbrt</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/log1p_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::log1p</definition>
        <argsstring>(T... args)</argsstring>
        <name>log1p</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/return_temporary_buffer_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::return_temporary_buffer</definition>
        <argsstring>(T... args)</argsstring>
        <name>return_temporary_buffer</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbsrtowcs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbsrtowcs</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbsrtowcs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feraiseexcept_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::feraiseexcept</definition>
        <argsstring>(T... args)</argsstring>
        <name>feraiseexcept</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fseek_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fseek</definition>
        <argsstring>(T... args)</argsstring>
        <name>fseek</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_or_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_or_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_or_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/log_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::log</definition>
        <argsstring>(T... args)</argsstring>
        <name>log</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/putchar_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::putchar</definition>
        <argsstring>(T... args)</argsstring>
        <name>putchar</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/tuple/make_tuple_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::make_tuple</definition>
        <argsstring>(T... args)</argsstring>
        <name>make_tuple</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/expm1_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::expm1</definition>
        <argsstring>(T... args)</argsstring>
        <name>expm1</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fma_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fma</definition>
        <argsstring>(T... args)</argsstring>
        <name>fma</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/remove_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::remove_copy_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>remove_copy_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/showpoint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::showpoint</definition>
        <argsstring>(T... args)</argsstring>
        <name>showpoint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>fscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/stable_partition_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stable_partition</definition>
        <argsstring>(T... args)</argsstring>
        <name>stable_partition</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/fill_n_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fill_n</definition>
        <argsstring>(T... args)</argsstring>
        <name>fill_n</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/remove_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::remove_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>remove_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_compare_exchange_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_compare_exchange_strong_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_compare_exchange_strong_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/wctomb_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wctomb</definition>
        <argsstring>(T... args)</argsstring>
        <name>wctomb</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fgets_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fgets</definition>
        <argsstring>(T... args)</argsstring>
        <name>fgets</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/remainder_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::remainder</definition>
        <argsstring>(T... args)</argsstring>
        <name>remainder</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/shared_ptr/allocate_shared_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::allocate_shared</definition>
        <argsstring>(T... args)</argsstring>
        <name>allocate_shared</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/unique_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::unique</definition>
        <argsstring>(T... args)</argsstring>
        <name>unique</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/includes_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::includes</definition>
        <argsstring>(T... args)</argsstring>
        <name>includes</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswalnum_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswalnum</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswalnum</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/exit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::exit</definition>
        <argsstring>(T... args)</argsstring>
        <name>exit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/put_time_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::put_time</definition>
        <argsstring>(T... args)</argsstring>
        <name>put_time</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/to_string_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::to_string</definition>
        <argsstring>(T... args)</argsstring>
        <name>to_string</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/is_heap_until_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::is_heap_until</definition>
        <argsstring>(T... args)</argsstring>
        <name>is_heap_until</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstold</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstold</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stold</definition>
        <argsstring>(T... args)</argsstring>
        <name>stold</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/ftell_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ftell</definition>
        <argsstring>(T... args)</argsstring>
        <name>ftell</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/copy_backward_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::copy_backward</definition>
        <argsstring>(T... args)</argsstring>
        <name>copy_backward</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstoll</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstoll</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/perror_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::perror</definition>
        <argsstring>(T... args)</argsstring>
        <name>perror</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfwscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vwscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vwscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/stable_sort_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stable_sort</definition>
        <argsstring>(T... args)</argsstring>
        <name>stable_sort</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/generic_category_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::generic_category</definition>
        <argsstring>(T... args)</argsstring>
        <name>generic_category</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/abs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::abs(int)</definition>
        <argsstring>(T... args)</argsstring>
        <name>abs(int)</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fgetws_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fgetws</definition>
        <argsstring>(T... args)</argsstring>
        <name>fgetws</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/showpos_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::showpos</definition>
        <argsstring>(T... args)</argsstring>
        <name>showpos</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/exp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::exp</definition>
        <argsstring>(T... args)</argsstring>
        <name>exp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/fill_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fill</definition>
        <argsstring>(T... args)</argsstring>
        <name>fill</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isalpha_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isalpha</definition>
        <argsstring>(T... args)</argsstring>
        <name>isalpha</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/lgamma_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::lgamma</definition>
        <argsstring>(T... args)</argsstring>
        <name>lgamma</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feclearexcept_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::feclearexcept</definition>
        <argsstring>(T... args)</argsstring>
        <name>feclearexcept</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsncpy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsncpy</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsncpy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/gc/undeclare_reachable_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::undeclare_reachable</definition>
        <argsstring>(T... args)</argsstring>
        <name>undeclare_reachable</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/hex_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::oct</definition>
        <argsstring>(T... args)</argsstring>
        <name>oct</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strspn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strspn</definition>
        <argsstring>(T... args)</argsstring>
        <name>strspn</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/c/realloc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::realloc</definition>
        <argsstring>(T... args)</argsstring>
        <name>realloc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/binary_search_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::binary_search</definition>
        <argsstring>(T... args)</argsstring>
        <name>binary_search</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/system_category_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::system_category</definition>
        <argsstring>(T... args)</argsstring>
        <name>system_category</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbrtowc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbrtowc</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbrtowc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtof</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtof</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/functional/mem_fn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mem_fn</definition>
        <argsstring>(T... args)</argsstring>
        <name>mem_fn</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/distance_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::distance</definition>
        <argsstring>(T... args)</argsstring>
        <name>distance</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/thread/lock_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::lock</definition>
        <argsstring>(T... args)</argsstring>
        <name>lock</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strcmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strcmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>strcmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/tmpfile_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tmpfile</definition>
        <argsstring>(T... args)</argsstring>
        <name>tmpfile</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/hypot_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::hypot</definition>
        <argsstring>(T... args)</argsstring>
        <name>hypot</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/getenv_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::getenv</definition>
        <argsstring>(T... args)</argsstring>
        <name>getenv</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strrchr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strrchr</definition>
        <argsstring>(T... args)</argsstring>
        <name>strrchr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/count_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::count</definition>
        <argsstring>(T... args)</argsstring>
        <name>count</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/tan_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tan</definition>
        <argsstring>(T... args)</argsstring>
        <name>tan</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/strftime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strftime</definition>
        <argsstring>(T... args)</argsstring>
        <name>strftime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stod</definition>
        <argsstring>(T... args)</argsstring>
        <name>stod</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/towupper_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::towupper</definition>
        <argsstring>(T... args)</argsstring>
        <name>towupper</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/atoi_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atoll</definition>
        <argsstring>(T... args)</argsstring>
        <name>atoll</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_store_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_store</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_store</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stoi</definition>
        <argsstring>(T... args)</argsstring>
        <name>stoi</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/rethrow_exception_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rethrow_exception</definition>
        <argsstring>(T... args)</argsstring>
        <name>rethrow_exception</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/sin_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sin</definition>
        <argsstring>(T... args)</argsstring>
        <name>sin</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_sub_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_sub_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_sub_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/unexpected_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::unexpected</definition>
        <argsstring>(T... args)</argsstring>
        <name>unexpected</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbtowc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbtowc</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbtowc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/get_time_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_time</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_time</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/partition_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::partition</definition>
        <argsstring>(T... args)</argsstring>
        <name>partition</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/next_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::next</definition>
        <argsstring>(T... args)</argsstring>
        <name>next</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/isfinite_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isfinite</definition>
        <argsstring>(T... args)</argsstring>
        <name>isfinite</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/boolalpha_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::boolalpha</definition>
        <argsstring>(T... args)</argsstring>
        <name>boolalpha</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/fetestexcept_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fetestexcept</definition>
        <argsstring>(T... args)</argsstring>
        <name>fetestexcept</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbrlen_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbrlen</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbrlen</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswgraph_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswgraph</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswgraph</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/time_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::time</definition>
        <argsstring>(T... args)</argsstring>
        <name>time</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_compare_exchange_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_compare_exchange_strong</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_compare_exchange_strong</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcschr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcschr</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcschr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/uppercase_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::uppercase</definition>
        <argsstring>(T... args)</argsstring>
        <name>uppercase</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/lower_bound_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::lower_bound</definition>
        <argsstring>(T... args)</argsstring>
        <name>lower_bound</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::copy_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>copy_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/isnan_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isnan</definition>
        <argsstring>(T... args)</argsstring>
        <name>isnan</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/locale/has_facet_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::has_facet</definition>
        <argsstring>(T... args)</argsstring>
        <name>has_facet</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/kill_dependency_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::kill_dependency</definition>
        <argsstring>(T... args)</argsstring>
        <name>kill_dependency</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/uninitialized_copy_n_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::uninitialized_copy_n</definition>
        <argsstring>(T... args)</argsstring>
        <name>uninitialized_copy_n</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feholdexcept_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::feholdexcept</definition>
        <argsstring>(T... args)</argsstring>
        <name>feholdexcept</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/div_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::div</definition>
        <argsstring>(T... args)</argsstring>
        <name>div</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/at_quick_exit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::at_quick_exit</definition>
        <argsstring>(T... args)</argsstring>
        <name>at_quick_exit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcspbrk_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcspbrk</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcspbrk</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/search_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::search</definition>
        <argsstring>(T... args)</argsstring>
        <name>search</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/find_first_of_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::find_first_of</definition>
        <argsstring>(T... args)</argsstring>
        <name>find_first_of</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/iota_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iota</definition>
        <argsstring>(T... args)</argsstring>
        <name>iota</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/gc/declare_reachable_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::declare_reachable</definition>
        <argsstring>(T... args)</argsstring>
        <name>declare_reachable</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_compare_exchange_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_compare_exchange_weak</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_compare_exchange_weak</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtod</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtod</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/accumulate_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::accumulate</definition>
        <argsstring>(T... args)</argsstring>
        <name>accumulate</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsrchr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsrchr</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsrchr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/min_element_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::min_element</definition>
        <argsstring>(T... args)</argsstring>
        <name>min_element</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/clearerr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::clearerr</definition>
        <argsstring>(T... args)</argsstring>
        <name>clearerr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/random_shuffle_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::random_shuffle</definition>
        <argsstring>(T... args)</argsstring>
        <name>random_shuffle</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswalpha_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswalpha</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswalpha</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_sub_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_and</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_and</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wmemchr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wmemchr</definition>
        <argsstring>(T... args)</argsstring>
        <name>wmemchr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/bsearch_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::bsearch</definition>
        <argsstring>(T... args)</argsstring>
        <name>bsearch</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/ilogb_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ilogb</definition>
        <argsstring>(T... args)</argsstring>
        <name>ilogb</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/unique_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::unique_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>unique_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/_Exit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::_Exit</definition>
        <argsstring>(T... args)</argsstring>
        <name>_Exit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/move_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::move</definition>
        <argsstring>(T... args)</argsstring>
        <name>move</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/find_end_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::find_end</definition>
        <argsstring>(T... args)</argsstring>
        <name>find_end</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feexceptflag_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fesetexceptflag</definition>
        <argsstring>(T... args)</argsstring>
        <name>fesetexceptflag</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/nth_element_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nth_element</definition>
        <argsstring>(T... args)</argsstring>
        <name>nth_element</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/gets_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::gets</definition>
        <argsstring>(T... args)</argsstring>
        <name>gets</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/lexicographical_compare_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::lexicographical_compare</definition>
        <argsstring>(T... args)</argsstring>
        <name>lexicographical_compare</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/nearbyint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nearbyint</definition>
        <argsstring>(T... args)</argsstring>
        <name>nearbyint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/memcpy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::memcpy</definition>
        <argsstring>(T... args)</argsstring>
        <name>memcpy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwrite_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fwrite</definition>
        <argsstring>(T... args)</argsstring>
        <name>fwrite</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/unitbuf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::unitbuf</definition>
        <argsstring>(T... args)</argsstring>
        <name>unitbuf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswlower_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswlower</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswlower</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mblen_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mblen</definition>
        <argsstring>(T... args)</argsstring>
        <name>mblen</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::swscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>swscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstoimax_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstoimax</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstoimax</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>fprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/find_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::find_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>find_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtoimax_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtoimax</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtoimax</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isalnum_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isalnum</definition>
        <argsstring>(T... args)</argsstring>
        <name>isalnum</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_add_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_add_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_add_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/push_heap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::push_heap</definition>
        <argsstring>(T... args)</argsstring>
        <name>push_heap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/min_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::min</definition>
        <argsstring>(T... args)</argsstring>
        <name>min</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fwprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>fwprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/uncaught_exception_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::uncaught_exception</definition>
        <argsstring>(T... args)</argsstring>
        <name>uncaught_exception</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtoll</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtoll</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/throw_with_nested_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::throw_with_nested</definition>
        <argsstring>(T... args)</argsstring>
        <name>throw_with_nested</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/random_shuffle_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::shuffle</definition>
        <argsstring>(T... args)</argsstring>
        <name>shuffle</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isprint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isprint</definition>
        <argsstring>(T... args)</argsstring>
        <name>isprint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/new/get_new_handler_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_new_handler</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_new_handler</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/thread/call_once_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::call_once</definition>
        <argsstring>(T... args)</argsstring>
        <name>call_once</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/trunc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::trunc</definition>
        <argsstring>(T... args)</argsstring>
        <name>trunc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcscspn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcscspn</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcscspn</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbrtoc16_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbrtoc16</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbrtoc16</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/round_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::lround</definition>
        <argsstring>(T... args)</argsstring>
        <name>lround</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/pow_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::pow</definition>
        <argsstring>(T... args)</argsstring>
        <name>pow</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/tgamma_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tgamma</definition>
        <argsstring>(T... args)</argsstring>
        <name>tgamma</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/erfc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::erfc</definition>
        <argsstring>(T... args)</argsstring>
        <name>erfc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/round_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::llround</definition>
        <argsstring>(T... args)</argsstring>
        <name>llround</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fabs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::abs(float)</definition>
        <argsstring>(T... args)</argsstring>
        <name>abs(float)</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/asinh_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::asinh</definition>
        <argsstring>(T... args)</argsstring>
        <name>asinh</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/feof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::feof</definition>
        <argsstring>(T... args)</argsstring>
        <name>feof</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/skipws_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::noskipws</definition>
        <argsstring>(T... args)</argsstring>
        <name>noskipws</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/find_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::find</definition>
        <argsstring>(T... args)</argsstring>
        <name>find</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/atoi_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atoi</definition>
        <argsstring>(T... args)</argsstring>
        <name>atoi</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/functional/not1_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::not1</definition>
        <argsstring>(T... args)</argsstring>
        <name>not1</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vfscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vfscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stof</definition>
        <argsstring>(T... args)</argsstring>
        <name>stof</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/regex/regex_search_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::regex_search</definition>
        <argsstring>(T... args)</argsstring>
        <name>regex_search</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/rotate_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rotate_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>rotate_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/new/set_new_handler_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_new_handler</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_new_handler</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/gc/undeclare_no_pointers_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::undeclare_no_pointers</definition>
        <argsstring>(T... args)</argsstring>
        <name>undeclare_no_pointers</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/thread/async_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::async</definition>
        <argsstring>(T... args)</argsstring>
        <name>async</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/partition_point_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::partition_point</definition>
        <argsstring>(T... args)</argsstring>
        <name>partition_point</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vsscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vsscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feround_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fesetround</definition>
        <argsstring>(T... args)</argsstring>
        <name>fesetround</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_is_lock_free_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_is_lock_free</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_is_lock_free</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/tanh_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tanh</definition>
        <argsstring>(T... args)</argsstring>
        <name>tanh</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/div_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ldiv</definition>
        <argsstring>(T... args)</argsstring>
        <name>ldiv</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/setbase_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setbase</definition>
        <argsstring>(T... args)</argsstring>
        <name>setbase</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/remove_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::remove</definition>
        <argsstring>(T... args)</argsstring>
        <name>remove</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtol</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtol</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strpbrk_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strpbrk</definition>
        <argsstring>(T... args)</argsstring>
        <name>strpbrk</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/signbit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::signbit</definition>
        <argsstring>(T... args)</argsstring>
        <name>signbit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsncat_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsncat</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsncat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/get_money_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_money</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_money</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/set_difference_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_difference</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_difference</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/functional/ref_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::cref</definition>
        <argsstring>(T... args)</argsstring>
        <name>cref</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/getline_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::getline</definition>
        <argsstring>(T... args)</argsstring>
        <name>getline</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/to_wstring_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::to_wstring</definition>
        <argsstring>(T... args)</argsstring>
        <name>to_wstring</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/system_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::system</definition>
        <argsstring>(T... args)</argsstring>
        <name>system</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/shared_ptr/pointer_cast_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::static_pointer_cast</definition>
        <argsstring>(T... args)</argsstring>
        <name>static_pointer_cast</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstoimax_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstoumax</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstoumax</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/memmove_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::memmove</definition>
        <argsstring>(T... args)</argsstring>
        <name>memmove</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/getwchar_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::getwchar</definition>
        <argsstring>(T... args)</argsstring>
        <name>getwchar</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/fixed_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::scientific</definition>
        <argsstring>(T... args)</argsstring>
        <name>scientific</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/wcsftime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsftime</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsftime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/begin_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::begin</definition>
        <argsstring>(T... args)</argsstring>
        <name>begin</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/ceil_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ceil</definition>
        <argsstring>(T... args)</argsstring>
        <name>ceil</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/sinh_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sinh</definition>
        <argsstring>(T... args)</argsstring>
        <name>sinh</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/is_permutation_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::is_permutation</definition>
        <argsstring>(T... args)</argsstring>
        <name>is_permutation</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/generate_n_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::generate_n</definition>
        <argsstring>(T... args)</argsstring>
        <name>generate_n</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/acosh_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::acosh</definition>
        <argsstring>(T... args)</argsstring>
        <name>acosh</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/advance_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::advance</definition>
        <argsstring>(T... args)</argsstring>
        <name>advance</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/flush_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::flush</definition>
        <argsstring>(T... args)</argsstring>
        <name>flush</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_xor_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_xor</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_xor</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/ws_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ws</definition>
        <argsstring>(T... args)</argsstring>
        <name>ws</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/signal_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::signal</definition>
        <argsstring>(T... args)</argsstring>
        <name>signal</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/showbase_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::noshowbase</definition>
        <argsstring>(T... args)</argsstring>
        <name>noshowbase</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/generate_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::generate</definition>
        <argsstring>(T... args)</argsstring>
        <name>generate</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/ldexp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ldexp</definition>
        <argsstring>(T... args)</argsstring>
        <name>ldexp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vsnprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vsnprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/remove_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::remove_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>remove_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stoul_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stoull</definition>
        <argsstring>(T... args)</argsstring>
        <name>stoull</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feexceptflag_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fegetexceptflag</definition>
        <argsstring>(T... args)</argsstring>
        <name>fegetexceptflag</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/find_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::find_if_not</definition>
        <argsstring>(T... args)</argsstring>
        <name>find_if_not</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/merge_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::merge</definition>
        <argsstring>(T... args)</argsstring>
        <name>merge</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/c/free_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::free</definition>
        <argsstring>(T... args)</argsstring>
        <name>free</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/count_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::count_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>count_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/clock_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::clock</definition>
        <argsstring>(T... args)</argsstring>
        <name>clock</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/mktime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mktime</definition>
        <argsstring>(T... args)</argsstring>
        <name>mktime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/inserter_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::inserter</definition>
        <argsstring>(T... args)</argsstring>
        <name>inserter</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/puts_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::puts</definition>
        <argsstring>(T... args)</argsstring>
        <name>puts</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/asin_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::asin</definition>
        <argsstring>(T... args)</argsstring>
        <name>asin</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/iscntrl_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iscntrl</definition>
        <argsstring>(T... args)</argsstring>
        <name>iscntrl</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/difftime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::difftime</definition>
        <argsstring>(T... args)</argsstring>
        <name>difftime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/terminate_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::terminate</definition>
        <argsstring>(T... args)</argsstring>
        <name>terminate</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/memcmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::memcmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>memcmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/uninitialized_fill_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::uninitialized_fill</definition>
        <argsstring>(T... args)</argsstring>
        <name>uninitialized_fill</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/hex_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::hex</definition>
        <argsstring>(T... args)</argsstring>
        <name>hex</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/tuple/tie_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tie</definition>
        <argsstring>(T... args)</argsstring>
        <name>tie</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/back_inserter_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::back_inserter</definition>
        <argsstring>(T... args)</argsstring>
        <name>back_inserter</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/upper_bound_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::upper_bound</definition>
        <argsstring>(T... args)</argsstring>
        <name>upper_bound</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/adjacent_find_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::adjacent_find</definition>
        <argsstring>(T... args)</argsstring>
        <name>adjacent_find</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/locale/use_facet_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::use_facet</definition>
        <argsstring>(T... args)</argsstring>
        <name>use_facet</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfwprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vfwprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vfwprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_add_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_add</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_add</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fsetpos_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fsetpos</definition>
        <argsstring>(T... args)</argsstring>
        <name>fsetpos</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/c/malloc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::malloc</definition>
        <argsstring>(T... args)</argsstring>
        <name>malloc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/localtime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::localtime</definition>
        <argsstring>(T... args)</argsstring>
        <name>localtime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcscmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcscmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcscmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/c32rtomb_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::c32rtomb</definition>
        <argsstring>(T... args)</argsstring>
        <name>c32rtomb</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isupper_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isupper</definition>
        <argsstring>(T... args)</argsstring>
        <name>isupper</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstod</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstod</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/tolower_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tolower</definition>
        <argsstring>(T... args)</argsstring>
        <name>tolower</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/sort_heap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sort_heap</definition>
        <argsstring>(T... args)</argsstring>
        <name>sort_heap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isdigit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isdigit</definition>
        <argsstring>(T... args)</argsstring>
        <name>isdigit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcslen_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcslen</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcslen</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wmemcmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wmemcmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>wmemcmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/move_if_noexcept_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::move_if_noexcept</definition>
        <argsstring>(T... args)</argsstring>
        <name>move_if_noexcept</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/declval_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::declval</definition>
        <argsstring>(T... args)</argsstring>
        <name>declval</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fpclassify_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fpclassify</definition>
        <argsstring>(T... args)</argsstring>
        <name>fpclassify</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswupper_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswupper</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswupper</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/random/rand_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rand</definition>
        <argsstring>(T... args)</argsstring>
        <name>rand</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_compare_exchange_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_compare_exchange_weak_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_compare_exchange_weak_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/partial_sort_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::partial_sort</definition>
        <argsstring>(T... args)</argsstring>
        <name>partial_sort</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/rint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::llrint</definition>
        <argsstring>(T... args)</argsstring>
        <name>llrint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fclose_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fclose</definition>
        <argsstring>(T... args)</argsstring>
        <name>fclose</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/reverse_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::reverse</definition>
        <argsstring>(T... args)</argsstring>
        <name>reverse</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/partial_sum_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::partial_sum</definition>
        <argsstring>(T... args)</argsstring>
        <name>partial_sum</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/showbase_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::showbase</definition>
        <argsstring>(T... args)</argsstring>
        <name>showbase</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfwscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vswscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vswscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/atan_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atan</definition>
        <argsstring>(T... args)</argsstring>
        <name>atan</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/atanh_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atanh</definition>
        <argsstring>(T... args)</argsstring>
        <name>atanh</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/iter_swap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iter_swap</definition>
        <argsstring>(T... args)</argsstring>
        <name>iter_swap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/scalbn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::scalbln</definition>
        <argsstring>(T... args)</argsstring>
        <name>scalbln</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/reverse_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::reverse_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>reverse_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/forward_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::forward</definition>
        <argsstring>(T... args)</argsstring>
        <name>forward</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fgetc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::getc</definition>
        <argsstring>(T... args)</argsstring>
        <name>getc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/equal_range_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::equal_range</definition>
        <argsstring>(T... args)</argsstring>
        <name>equal_range</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_sub_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_sub</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_sub</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/is_partitioned_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::is_partitioned</definition>
        <argsstring>(T... args)</argsstring>
        <name>is_partitioned</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/next_permutation_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::next_permutation</definition>
        <argsstring>(T... args)</argsstring>
        <name>next_permutation</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/isblank_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isblank</definition>
        <argsstring>(T... args)</argsstring>
        <name>isblank</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/showpoint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::noshowpoint</definition>
        <argsstring>(T... args)</argsstring>
        <name>noshowpoint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/atan2_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atan2</definition>
        <argsstring>(T... args)</argsstring>
        <name>atan2</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/nan_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>nanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/towctrans_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::towctrans</definition>
        <argsstring>(T... args)</argsstring>
        <name>towctrans</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/left_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::right</definition>
        <argsstring>(T... args)</argsstring>
        <name>right</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fputwc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fputwc</definition>
        <argsstring>(T... args)</argsstring>
        <name>fputwc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtoul_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtoul</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtoul</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/is_heap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::is_heap</definition>
        <argsstring>(T... args)</argsstring>
        <name>is_heap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fflush_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fflush</definition>
        <argsstring>(T... args)</argsstring>
        <name>fflush</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtoimax_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtoumax</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtoumax</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/nextafter_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nexttoward</definition>
        <argsstring>(T... args)</argsstring>
        <name>nexttoward</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/unitbuf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nounitbuf</definition>
        <argsstring>(T... args)</argsstring>
        <name>nounitbuf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/ispunct_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ispunct</definition>
        <argsstring>(T... args)</argsstring>
        <name>ispunct</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/boolalpha_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::noboolalpha</definition>
        <argsstring>(T... args)</argsstring>
        <name>noboolalpha</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/pair/make_pair_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::make_pair</definition>
        <argsstring>(T... args)</argsstring>
        <name>make_pair</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswctype_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswctype</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswctype</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/random/srand_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::srand</definition>
        <argsstring>(T... args)</argsstring>
        <name>srand</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/replace_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::replace_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>replace_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/thread/future/future_category_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::future_category</definition>
        <argsstring>(T... args)</argsstring>
        <name>future_category</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/resetiosflags_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::resetiosflags</definition>
        <argsstring>(T... args)</argsstring>
        <name>resetiosflags</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/chrono/c/gmtime_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::gmtime</definition>
        <argsstring>(T... args)</argsstring>
        <name>gmtime</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/align_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::align</definition>
        <argsstring>(T... args)</argsstring>
        <name>align</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/tuple/tuple_cat_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tuple_cat</definition>
        <argsstring>(T... args)</argsstring>
        <name>tuple_cat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/ends_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ends</definition>
        <argsstring>(T... args)</argsstring>
        <name>ends</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/set_terminate_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::set_terminate</definition>
        <argsstring>(T... args)</argsstring>
        <name>set_terminate</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/rint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::lrint</definition>
        <argsstring>(T... args)</argsstring>
        <name>lrint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/all_any_none_of_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::none_of</definition>
        <argsstring>(T... args)</argsstring>
        <name>none_of</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fwscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>wscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fputc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fputc</definition>
        <argsstring>(T... args)</argsstring>
        <name>fputc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/hex_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::dec</definition>
        <argsstring>(T... args)</argsstring>
        <name>dec</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strcat_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strcat</definition>
        <argsstring>(T... args)</argsstring>
        <name>strcat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/raise_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::raise</definition>
        <argsstring>(T... args)</argsstring>
        <name>raise</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsspn_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsspn</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsspn</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/fabs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fabs</definition>
        <argsstring>(T... args)</argsstring>
        <name>fabs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wmemcpy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wmemcpy</definition>
        <argsstring>(T... args)</argsstring>
        <name>wmemcpy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/copy_n_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::copy_n</definition>
        <argsstring>(T... args)</argsstring>
        <name>copy_n</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/rethrow_if_nested_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rethrow_if_nested</definition>
        <argsstring>(T... args)</argsstring>
        <name>rethrow_if_nested</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/locale/setlocale_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setlocale</definition>
        <argsstring>(T... args)</argsstring>
        <name>setlocale</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/addressof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::addressof</definition>
        <argsstring>(T... args)</argsstring>
        <name>addressof</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/c/calloc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::calloc</definition>
        <argsstring>(T... args)</argsstring>
        <name>calloc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strerror_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strerror</definition>
        <argsstring>(T... args)</argsstring>
        <name>strerror</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strcpy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strcpy</definition>
        <argsstring>(T... args)</argsstring>
        <name>strcpy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstoul_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstoull</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstoull</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/c16rtomb_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::c16rtomb</definition>
        <argsstring>(T... args)</argsstring>
        <name>c16rtomb</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/random/generate_canonical_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::generate_canonical</definition>
        <argsstring>(T... args)</argsstring>
        <name>generate_canonical</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vfprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vfprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/thread/notify_all_at_thread_exit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::notify_all_at_thread_exit</definition>
        <argsstring>(T... args)</argsstring>
        <name>notify_all_at_thread_exit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/rotate_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rotate</definition>
        <argsstring>(T... args)</argsstring>
        <name>rotate</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/current_exception_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::current_exception</definition>
        <argsstring>(T... args)</argsstring>
        <name>current_exception</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtok_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtok</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtok</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcscat_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcscat</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcscat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strncpy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strncpy</definition>
        <argsstring>(T... args)</argsstring>
        <name>strncpy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/towlower_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::towlower</definition>
        <argsstring>(T... args)</argsstring>
        <name>towlower</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/floor_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::floor</definition>
        <argsstring>(T... args)</argsstring>
        <name>floor</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/left_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::left</definition>
        <argsstring>(T... args)</argsstring>
        <name>left</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/ferror_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ferror</definition>
        <argsstring>(T... args)</argsstring>
        <name>ferror</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_load_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_load_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_load_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/swap_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::swap</definition>
        <argsstring>(T... args)</argsstring>
        <name>swap</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/acos_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::acos</definition>
        <argsstring>(T... args)</argsstring>
        <name>acos</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcscoll_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcscoll</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcscoll</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/sqrt_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sqrt</definition>
        <argsstring>(T... args)</argsstring>
        <name>sqrt</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/mbsinit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mbsinit</definition>
        <argsstring>(T... args)</argsstring>
        <name>mbsinit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/qsort_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::qsort</definition>
        <argsstring>(T... args)</argsstring>
        <name>qsort</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stoll</definition>
        <argsstring>(T... args)</argsstring>
        <name>stoll</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/put_money_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::put_money</definition>
        <argsstring>(T... args)</argsstring>
        <name>put_money</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstoul_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstoul</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstoul</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstol_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstol</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstol</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/atexit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atexit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atexit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_fetch_or_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_fetch_or</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_fetch_or</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/rewind_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rewind</definition>
        <argsstring>(T... args)</argsstring>
        <name>rewind</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsxfrm_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsxfrm</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsxfrm</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/round_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::round</definition>
        <argsstring>(T... args)</argsstring>
        <name>round</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfwprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vwprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vwprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/all_any_none_of_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::all_of</definition>
        <argsstring>(T... args)</argsstring>
        <name>all_of</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/replace_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::replace</definition>
        <argsstring>(T... args)</argsstring>
        <name>replace</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/remquo_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::remquo</definition>
        <argsstring>(T... args)</argsstring>
        <name>remquo</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/setbuf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setbuf</definition>
        <argsstring>(T... args)</argsstring>
        <name>setbuf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strncmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strncmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>strncmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/locale/localeconv_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::localeconv</definition>
        <argsstring>(T... args)</argsstring>
        <name>localeconv</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wctrans_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wctrans</definition>
        <argsstring>(T... args)</argsstring>
        <name>wctrans</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/all_any_none_of_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::any_of</definition>
        <argsstring>(T... args)</argsstring>
        <name>any_of</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/equal_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::equal</definition>
        <argsstring>(T... args)</argsstring>
        <name>equal</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/max_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::max</definition>
        <argsstring>(T... args)</argsstring>
        <name>max</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strxfrm_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strxfrm</definition>
        <argsstring>(T... args)</argsstring>
        <name>strxfrm</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswxdigit_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswxdigit</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswxdigit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/abs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::labs</definition>
        <argsstring>(T... args)</argsstring>
        <name>labs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/regex/regex_match_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::regex_match</definition>
        <argsstring>(T... args)</argsstring>
        <name>regex_match</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fputws_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fputws</definition>
        <argsstring>(T... args)</argsstring>
        <name>fputws</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/wcrtomb_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcrtomb</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcrtomb</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/setprecision_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setprecision</definition>
        <argsstring>(T... args)</argsstring>
        <name>setprecision</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/setvbuf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setvbuf</definition>
        <argsstring>(T... args)</argsstring>
        <name>setvbuf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/regex/regex_replace_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::regex_replace</definition>
        <argsstring>(T... args)</argsstring>
        <name>regex_replace</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/freopen_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::freopen</definition>
        <argsstring>(T... args)</argsstring>
        <name>freopen</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/logb_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::logb</definition>
        <argsstring>(T... args)</argsstring>
        <name>logb</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/wctob_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wctob</definition>
        <argsstring>(T... args)</argsstring>
        <name>wctob</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_load_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_load</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_load</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/search_n_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::search_n</definition>
        <argsstring>(T... args)</argsstring>
        <name>search_n</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/toupper_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::toupper</definition>
        <argsstring>(T... args)</argsstring>
        <name>toupper</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/move_backward_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::move_backward</definition>
        <argsstring>(T... args)</argsstring>
        <name>move_backward</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/is_sorted_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::is_sorted</definition>
        <argsstring>(T... args)</argsstring>
        <name>is_sorted</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtoul_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtoull</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtoull</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswblank_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswblank</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswblank</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/gc/get_pointer_safety_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_pointer_safety</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_pointer_safety</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/get_unexpected_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_unexpected</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_unexpected</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::sscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>sscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feenv_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fesetenv</definition>
        <argsstring>(T... args)</argsstring>
        <name>fesetenv</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/atomic/atomic_store_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::atomic_store_explicit</definition>
        <argsstring>(T... args)</argsstring>
        <name>atomic_store_explicit</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strtof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strtold</definition>
        <argsstring>(T... args)</argsstring>
        <name>strtold</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fread_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fread</definition>
        <argsstring>(T... args)</argsstring>
        <name>fread</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/memchr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::memchr</definition>
        <argsstring>(T... args)</argsstring>
        <name>memchr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/btowc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::btowc</definition>
        <argsstring>(T... args)</argsstring>
        <name>btowc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/replace_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::replace_if</definition>
        <argsstring>(T... args)</argsstring>
        <name>replace_if</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strcoll_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strcoll</definition>
        <argsstring>(T... args)</argsstring>
        <name>strcoll</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vsprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vsprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/mismatch_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::mismatch</definition>
        <argsstring>(T... args)</argsstring>
        <name>mismatch</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/getchar_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::getchar</definition>
        <argsstring>(T... args)</argsstring>
        <name>getchar</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/islower_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::islower</definition>
        <argsstring>(T... args)</argsstring>
        <name>islower</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/tmpnam_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::tmpnam</definition>
        <argsstring>(T... args)</argsstring>
        <name>tmpnam</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/nan_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::nanl</definition>
        <argsstring>(T... args)</argsstring>
        <name>nanl</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fopen_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fopen</definition>
        <argsstring>(T... args)</argsstring>
        <name>fopen</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/for_each_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::for_each</definition>
        <argsstring>(T... args)</argsstring>
        <name>for_each</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feround_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fegetround</definition>
        <argsstring>(T... args)</argsstring>
        <name>fegetround</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/ungetc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::ungetc</definition>
        <argsstring>(T... args)</argsstring>
        <name>ungetc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/left_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::internal</definition>
        <argsstring>(T... args)</argsstring>
        <name>internal</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfwscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vfwscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vfwscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fgetc_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fgetc</definition>
        <argsstring>(T... args)</argsstring>
        <name>fgetc</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcstof_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstof</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstof</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/functional/bind_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::bind</definition>
        <argsstring>(T... args)</argsstring>
        <name>bind</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/skipws_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::skipws</definition>
        <argsstring>(T... args)</argsstring>
        <name>skipws</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswprint_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswprint</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswprint</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/multibyte/wcstombs_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcstombs</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcstombs</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/inplace_merge_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::inplace_merge</definition>
        <argsstring>(T... args)</argsstring>
        <name>inplace_merge</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/copysign_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::copysign</definition>
        <argsstring>(T... args)</argsstring>
        <name>copysign</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/putwchar_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::putwchar</definition>
        <argsstring>(T... args)</argsstring>
        <name>putwchar</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/wcsstr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::wcsstr</definition>
        <argsstring>(T... args)</argsstring>
        <name>wcsstr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/fenv/feenv_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fegetenv</definition>
        <argsstring>(T... args)</argsstring>
        <name>fegetenv</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/utility/program/longjmp_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::longjmp</definition>
        <argsstring>(T... args)</argsstring>
        <name>longjmp</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/wide/iswcntrl_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::iswcntrl</definition>
        <argsstring>(T... args)</argsstring>
        <name>iswcntrl</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/memory/gc/declare_no_pointers_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::declare_no_pointers</definition>
        <argsstring>(T... args)</argsstring>
        <name>declare_no_pointers</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/isnormal_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::isnormal</definition>
        <argsstring>(T... args)</argsstring>
        <name>isnormal</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/swap_ranges_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::swap_ranges</definition>
        <argsstring>(T... args)</argsstring>
        <name>swap_ranges</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/minmax_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::minmax</definition>
        <argsstring>(T... args)</argsstring>
        <name>minmax</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/fixed_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::defaultfloat</definition>
        <argsstring>(T... args)</argsstring>
        <name>defaultfloat</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/rename_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::rename</definition>
        <argsstring>(T... args)</argsstring>
        <name>rename</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::snprintf</definition>
        <argsstring>(T... args)</argsstring>
        <name>snprintf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/thread/try_lock_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::try_lock</definition>
        <argsstring>(T... args)</argsstring>
        <name>try_lock</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/basic_string/stoul_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::stoul</definition>
        <argsstring>(T... args)</argsstring>
        <name>stoul</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fgetpos_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::fgetpos</definition>
        <argsstring>(T... args)</argsstring>
        <name>fgetpos</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/partition_copy_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::partition_copy</definition>
        <argsstring>(T... args)</argsstring>
        <name>partition_copy</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/vfscanf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::vscanf</definition>
        <argsstring>(T... args)</argsstring>
        <name>vscanf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/front_inserter_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::front_inserter</definition>
        <argsstring>(T... args)</argsstring>
        <name>front_inserter</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/error/get_terminate_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::get_terminate</definition>
        <argsstring>(T... args)</argsstring>
        <name>get_terminate</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/numeric/math/cosh_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::cosh</definition>
        <argsstring>(T... args)</argsstring>
        <name>cosh</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/iterator/prev_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::prev</definition>
        <argsstring>(T... args)</argsstring>
        <name>prev</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strchr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strchr</definition>
        <argsstring>(T... args)</argsstring>
        <name>strchr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/string/byte/strstr_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::strstr</definition>
        <argsstring>(T... args)</argsstring>
        <name>strstr</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/c/fprintf_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::printf</definition>
        <argsstring>(T... args)</argsstring>
        <name>printf</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/io/manip/setfill_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::setfill</definition>
        <argsstring>(T... args)</argsstring>
        <name>setfill</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cpp/algorithm/inner_product_1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T std::inner_product</definition>
        <argsstring>(T... args)</argsstring>
        <name>inner_product</name>
        <param>
          <type>T...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="" line="1" column="1"/>
      </memberdef>
      <memberdef kind="function" id="small__vector_8hpp_1a6a0d9efe4f3de0b5046c0afa87556582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void std::swap</definition>
        <argsstring>(tf::SmallVectorImpl&lt; T &gt; &amp;LHS, tf::SmallVectorImpl&lt; T &gt; &amp;RHS)</argsstring>
        <name>swap</name>
        <param>
          <type>tf::SmallVectorImpl&lt; T &gt; &amp;</type>
          <declname>LHS</declname>
        </param>
        <param>
          <type>tf::SmallVectorImpl&lt; T &gt; &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
<para>Implement std::swap in terms of SmallVector swap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/utility/small_vector.hpp" line="1037" column="3" bodyfile="taskflow/utility/small_vector.hpp" bodystart="1037" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="small__vector_8hpp_1ac8164ee2aeb48c22836ad8e3f6c6f067" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>unsigned</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void std::swap</definition>
        <argsstring>(tf::SmallVector&lt; T, N &gt; &amp;LHS, tf::SmallVector&lt; T, N &gt; &amp;RHS)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classtf_1_1SmallVector" kindref="compound">tf::SmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>LHS</declname>
        </param>
        <param>
          <type><ref refid="classtf_1_1SmallVector" kindref="compound">tf::SmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>RHS</declname>
        </param>
        <briefdescription>
<para>Implement std::swap in terms of SmallVector swap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/utility/small_vector.hpp" line="1044" column="3" bodyfile="taskflow/utility/small_vector.hpp" bodystart="1044" bodyend="1046"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="doxygen/cppreference-doxygen-web.tag.xml" line="1" column="1"/>
  </compounddef>
</doxygen>
