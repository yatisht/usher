<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtf_1_1cudaTask" kind="class" language="C++" prot="public">
    <compoundname>tf::cudaTask</compoundname>
    <includes refid="cuda__graph_8hpp" local="no">taskflow/cuda/cuda_graph.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtf_1_1cudaTask_1aee624661cc5a227ae8aa6f5caa05d09b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Creator</type>
          </param>
          <param>
            <type>typename Deleter</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class cudaGraphBase</definition>
        <argsstring></argsstring>
        <name>cudaGraphBase</name>
        <param>
          <type><ref refid="classtf_1_1cudaGraphBase" kindref="compound">cudaGraphBase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="268" column="3" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1aa54d5b4083fcc218fde06b3596ab7009" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Creator</type>
          </param>
          <param>
            <type>typename Deleter</type>
          </param>
        </templateparamlist>
        <type>class</type>
        <definition>friend class cudaGraphExecBase</definition>
        <argsstring></argsstring>
        <name>cudaGraphExecBase</name>
        <param>
          <type><ref refid="classtf_1_1cudaGraphExecBase" kindref="compound">cudaGraphExecBase</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="271" column="3" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1a9f64f729511a922781a59663ff1c6250" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class cudaFlow</definition>
        <argsstring></argsstring>
        <name>cudaFlow</name>
        <param>
          <type>cudaFlow</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="273" column="3" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1a672b45d300c57d726c203c62f950efbd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class cudaFlowCapturer</definition>
        <argsstring></argsstring>
        <name>cudaFlowCapturer</name>
        <param>
          <type>cudaFlowCapturer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="274" column="3" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1a8a72366cffc8beb57fb68b1591df56e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class cudaFlowCapturerBase</definition>
        <argsstring></argsstring>
        <name>cudaFlowCapturerBase</name>
        <param>
          <type>cudaFlowCapturerBase</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="275" column="3" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1cudaTask_1aa48fa98a827ff71f8c3845a29f5e4d10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const cudaTask &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
          <defname>ct</defname>
        </param>
        <briefdescription>
<para>overload of ostream inserter operator for <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="277" column="10" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="402" bodyend="405"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1cudaTask_1ae334b42a45262d9488217817a1445db4" prot="private" static="no" mutable="no">
        <type>cudaGraph_t</type>
        <definition>cudaGraph_t tf::cudaTask::_native_graph</definition>
        <argsstring></argsstring>
        <name>_native_graph</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="346" column="17" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1cudaTask_1af14ef67a7f6ad635b32107829084f87a" prot="private" static="no" mutable="no">
        <type>cudaGraphNode_t</type>
        <definition>cudaGraphNode_t tf::cudaTask::_native_node</definition>
        <argsstring></argsstring>
        <name>_native_node</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="347" column="21" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1cudaTask_1a68942b759c0420da99b639a8de3cc3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaTask::cudaTask</definition>
        <argsstring>()=default</argsstring>
        <name>cudaTask</name>
        <briefdescription>
<para>constructs an empty <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="284" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a367cf46c1ea828de4502a2ddc805c094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaTask::cudaTask</definition>
        <argsstring>(const cudaTask &amp;)=default</argsstring>
        <name>cudaTask</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        </param>
        <briefdescription>
<para>copy-constructs a <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="289" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1af17c570ca9a43ad71c4b626635ea9cbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask&amp; tf::cudaTask::operator=</definition>
        <argsstring>(const cudaTask &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        </param>
        <briefdescription>
<para>copy-assigns a <ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="294" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1abdd68287ec4dff4216af34d1db44d1b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask &amp; tf::cudaTask::precede</definition>
        <argsstring>(Ts &amp;&amp;... tasks)</argsstring>
        <name>precede</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>tasks</declname>
        </param>
        <briefdescription>
<para>adds precedence links from this to other tasks </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Ts</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter pack</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tasks</parametername>
</parameternamelist>
<parameterdescription>
<para>one or multiple tasks</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>*this</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="306" column="14" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="357" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a4a9ca1a34bac47e4c9b04eb4fb2f7775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtf_1_1cudaTask" kindref="compound">cudaTask</ref> &amp;</type>
        <definition>cudaTask &amp; tf::cudaTask::succeed</definition>
        <argsstring>(Ts &amp;&amp;... tasks)</argsstring>
        <name>succeed</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>tasks</declname>
        </param>
        <briefdescription>
<para>adds precedence links from other tasks to this </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Ts</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter pack</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tasks</parametername>
</parameternamelist>
<parameterdescription>
<para>one or multiple tasks</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>*this</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="318" column="14" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a581673ad83a48a2d3b4f06f125043c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::cudaTask::num_successors</definition>
        <argsstring>() const</argsstring>
        <name>num_successors</name>
        <briefdescription>
<para>queries the number of successors </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="323" column="12" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a4dd9aacbd1ab16cf31e680938bd6d196" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::cudaTask::num_predecessors</definition>
        <argsstring>() const</argsstring>
        <name>num_predecessors</name>
        <briefdescription>
<para>queries the number of dependents </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="328" column="12" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="374" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1a78b6a856c844a08d4d9cfa992dc6cfef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto tf::cudaTask::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>queries the type of this task </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="333" column="10" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="388" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaTask_1ad1198268d00b50c3c705a2c9826d5a64" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::cudaTask::dump</definition>
        <argsstring>(std::ostream &amp;os) const</argsstring>
        <name>dump</name>
        <param>
          <type><ref refid="cpp/io/basic_ostream" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::ostream</ref> &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
<para>dumps the task through an output stream </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>an output stream target </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="340" column="10" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="395" bodyend="397"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtf_1_1cudaTask_1a2e0fab31a5862dddacfdfc281d8f479b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::cudaTask::cudaTask</definition>
        <argsstring>(cudaGraph_t, cudaGraphNode_t)</argsstring>
        <name>cudaTask</name>
        <param>
          <type>cudaGraph_t</type>
          <defname>native_graph</defname>
        </param>
        <param>
          <type>cudaGraphNode_t</type>
          <defname>native_node</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_graph.hpp" line="344" column="5" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="351" bodyend="353"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class to create a task handle of a CUDA <ref refid="classtf_1_1Graph" kindref="compound">Graph</ref> node </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="taskflow/cuda/cuda_graph.hpp" line="265" column="1" bodyfile="taskflow/cuda/cuda_graph.hpp" bodystart="265" bodyend="348"/>
    <listofallmembers>
      <member refid="classtf_1_1cudaTask_1ae334b42a45262d9488217817a1445db4" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>_native_graph</name></member>
      <member refid="classtf_1_1cudaTask_1af14ef67a7f6ad635b32107829084f87a" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>_native_node</name></member>
      <member refid="classtf_1_1cudaTask_1a9f64f729511a922781a59663ff1c6250" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaFlow</name></member>
      <member refid="classtf_1_1cudaTask_1a672b45d300c57d726c203c62f950efbd" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaFlowCapturer</name></member>
      <member refid="classtf_1_1cudaTask_1a8a72366cffc8beb57fb68b1591df56e4" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaFlowCapturerBase</name></member>
      <member refid="classtf_1_1cudaTask_1aee624661cc5a227ae8aa6f5caa05d09b" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaGraphBase</name></member>
      <member refid="classtf_1_1cudaTask_1aa54d5b4083fcc218fde06b3596ab7009" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaGraphExecBase</name></member>
      <member refid="classtf_1_1cudaTask_1a68942b759c0420da99b639a8de3cc3d1" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaTask</name></member>
      <member refid="classtf_1_1cudaTask_1a367cf46c1ea828de4502a2ddc805c094" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaTask</name></member>
      <member refid="classtf_1_1cudaTask_1a2e0fab31a5862dddacfdfc281d8f479b" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>cudaTask</name></member>
      <member refid="classtf_1_1cudaTask_1ad1198268d00b50c3c705a2c9826d5a64" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>dump</name></member>
      <member refid="classtf_1_1cudaTask_1a4dd9aacbd1ab16cf31e680938bd6d196" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>num_predecessors</name></member>
      <member refid="classtf_1_1cudaTask_1a581673ad83a48a2d3b4f06f125043c32" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>num_successors</name></member>
      <member refid="classtf_1_1cudaTask_1aa48fa98a827ff71f8c3845a29f5e4d10" prot="private" virt="non-virtual"><scope>tf::cudaTask</scope><name>operator&lt;&lt;</name></member>
      <member refid="classtf_1_1cudaTask_1af17c570ca9a43ad71c4b626635ea9cbb" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaTask_1abdd68287ec4dff4216af34d1db44d1b4" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>precede</name></member>
      <member refid="classtf_1_1cudaTask_1a4a9ca1a34bac47e4c9b04eb4fb2f7775" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>succeed</name></member>
      <member refid="classtf_1_1cudaTask_1a78b6a856c844a08d4d9cfa992dc6cfef" prot="public" virt="non-virtual"><scope>tf::cudaTask</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
