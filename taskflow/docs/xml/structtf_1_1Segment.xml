<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtf_1_1Segment" kind="struct" language="C++" prot="private">
    <compoundname>tf::Segment</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtf_1_1Segment_1a3e259f6da83dcf714ec785aa1a3d14bd" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string tf::Segment::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="27" column="15" bodyfile="taskflow/core/observer.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtf_1_1Segment_1a8f567dbac067898e2e5c4d4947b04fb4" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetf_1a1355048578785a80414707ff308b395a" kindref="member">TaskType</ref></type>
        <definition>TaskType tf::Segment::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="28" column="12" bodyfile="taskflow/core/observer.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtf_1_1Segment_1aad42f04f26507aa8ad977627774ee2b4" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetf_1a8cff4bbd797dde4dfab096c3cc657833" kindref="member">observer_stamp_t</ref></type>
        <definition>observer_stamp_t tf::Segment::beg</definition>
        <argsstring></argsstring>
        <name>beg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="30" column="20" bodyfile="taskflow/core/observer.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structtf_1_1Segment_1ae7558748ed58c8e274539295e6c6d770" prot="public" static="no" mutable="no">
        <type><ref refid="namespacetf_1a8cff4bbd797dde4dfab096c3cc657833" kindref="member">observer_stamp_t</ref></type>
        <definition>observer_stamp_t tf::Segment::end</definition>
        <argsstring></argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="31" column="20" bodyfile="taskflow/core/observer.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structtf_1_1Segment_1a24021971938c984d134c29a44b5b6093" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archiver</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto tf::Segment::save</definition>
        <argsstring>(Archiver &amp;ar) const</argsstring>
        <name>save</name>
        <param>
          <type>Archiver &amp;</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="34" column="8" bodyfile="taskflow/core/observer.hpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1Segment_1a74c1671a8ec913fac3a675bb4c5c9be3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archiver</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto tf::Segment::load</definition>
        <argsstring>(Archiver &amp;ar)</argsstring>
        <name>load</name>
        <param>
          <type>Archiver &amp;</type>
          <declname>ar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="39" column="8" bodyfile="taskflow/core/observer.hpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1Segment_1ad6393c5cf90f07b0eda6bf0c0321322d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::Segment::Segment</definition>
        <argsstring>()=default</argsstring>
        <name>Segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="43" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1Segment_1aab1d1ddd792d5b7b312ad14532034054" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::Segment::Segment</definition>
        <argsstring>(const std::string &amp;n, TaskType t, observer_stamp_t b, observer_stamp_t e)</argsstring>
        <name>Segment</name>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacetf_1a1355048578785a80414707ff308b395a" kindref="member">TaskType</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespacetf_1a8cff4bbd797dde4dfab096c3cc657833" kindref="member">observer_stamp_t</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespacetf_1a8cff4bbd797dde4dfab096c3cc657833" kindref="member">observer_stamp_t</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="45" column="3" bodyfile="taskflow/core/observer.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structtf_1_1Segment_1a336d5825032b4b9085f1e78a1fa26341" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto tf::Segment::span</definition>
        <argsstring>() const</argsstring>
        <name>span</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/observer.hpp" line="50" column="8" bodyfile="taskflow/core/observer.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>std::chrono::time_point&lt; std::chrono::steady_clock &gt;</label>
      </node>
      <node id="1">
        <label>tf::Segment</label>
        <childnode refid="2" relation="usage">
          <edgelabel>beg</edgelabel>
          <edgelabel>end</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
      </node>
    </collaborationgraph>
    <location file="taskflow/core/observer.hpp" line="25" column="1" bodyfile="taskflow/core/observer.hpp" bodystart="25" bodyend="53"/>
    <listofallmembers>
      <member refid="structtf_1_1Segment_1aad42f04f26507aa8ad977627774ee2b4" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>beg</name></member>
      <member refid="structtf_1_1Segment_1ae7558748ed58c8e274539295e6c6d770" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>end</name></member>
      <member refid="structtf_1_1Segment_1a74c1671a8ec913fac3a675bb4c5c9be3" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>load</name></member>
      <member refid="structtf_1_1Segment_1a3e259f6da83dcf714ec785aa1a3d14bd" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>name</name></member>
      <member refid="structtf_1_1Segment_1a24021971938c984d134c29a44b5b6093" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>save</name></member>
      <member refid="structtf_1_1Segment_1ad6393c5cf90f07b0eda6bf0c0321322d" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>Segment</name></member>
      <member refid="structtf_1_1Segment_1aab1d1ddd792d5b7b312ad14532034054" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>Segment</name></member>
      <member refid="structtf_1_1Segment_1a336d5825032b4b9085f1e78a1fa26341" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>span</name></member>
      <member refid="structtf_1_1Segment_1a8f567dbac067898e2e5c4d4947b04fb4" prot="public" virt="non-virtual"><scope>tf::Segment</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
