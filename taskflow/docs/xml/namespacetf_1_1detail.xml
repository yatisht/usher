<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacetf_1_1detail" kind="namespace" language="C++">
    <compoundname>tf::detail</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="small__vector_8hpp_1af7219c0a48eb7108171068b23dd93c92" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t tf::detail::NextCapacity</definition>
        <argsstring>(uint64_t A)</argsstring>
        <name>NextCapacity</name>
        <param>
          <type>uint64_t</type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>NextCapacity - Returns the next power of two (in 64-bits) that is strictly greater than A. Returns zero on overflow. this function assumes A to be positive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/utility/small_vector.hpp" line="30" column="17" bodyfile="taskflow/utility/small_vector.hpp" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="graph_8hpp_1a161a286a50a96357a744b6f0c6bc1911" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>TF_FORCE_INLINE Node *</type>
        <definition>TF_FORCE_INLINE Node* tf::detail::get_node_ptr</definition>
        <argsstring>(T &amp;node)</argsstring>
        <name>get_node_ptr</name>
        <param>
          <type>T &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/core/graph.hpp" line="723" column="22" bodyfile="taskflow/core/graph.hpp" bodystart="723" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="for__each_8hpp_1ad562902469d10ccdd9da04f51f380799" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void tf::detail::cuda_for_each_kernel</definition>
        <argsstring>(I first, unsigned count, C c)</argsstring>
        <name>cuda_for_each_kernel</name>
        <param>
          <type>I</type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/algorithm/for_each.hpp" line="18" column="17" bodyfile="taskflow/cuda/algorithm/for_each.hpp" bodystart="18" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="for__each_8hpp_1a73f2b10b07792d223ebc1bdc98f7126e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void tf::detail::cuda_for_each_index_kernel</definition>
        <argsstring>(I first, I inc, unsigned count, C c)</argsstring>
        <name>cuda_for_each_index_kernel</name>
        <param>
          <type>I</type>
          <declname>first</declname>
        </param>
        <param>
          <type>I</type>
          <declname>inc</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type>C</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/algorithm/for_each.hpp" line="32" column="17" bodyfile="taskflow/cuda/algorithm/for_each.hpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="transform_8hpp_1aaca64a4a5dbfc6e7857c53b94afa8f13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void tf::detail::cuda_transform_kernel</definition>
        <argsstring>(I first, unsigned count, O output, C op)</argsstring>
        <name>cuda_transform_kernel</name>
        <param>
          <type>I</type>
          <declname>first</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type>O</type>
          <declname>output</declname>
        </param>
        <param>
          <type>C</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/algorithm/transform.hpp" line="22" column="17" bodyfile="taskflow/cuda/algorithm/transform.hpp" bodystart="22" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="transform_8hpp_1a1a3474287aa9d954daf0ae63172c3b8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I1</type>
          </param>
          <param>
            <type>typename I2</type>
          </param>
          <param>
            <type>typename O</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>__global__ void</type>
        <definition>__global__ void tf::detail::cuda_transform_kernel</definition>
        <argsstring>(I1 first1, I2 first2, unsigned count, O output, C op)</argsstring>
        <name>cuda_transform_kernel</name>
        <param>
          <type>I1</type>
          <declname>first1</declname>
        </param>
        <param>
          <type>I2</type>
          <declname>first2</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>count</declname>
        </param>
        <param>
          <type>O</type>
          <declname>output</declname>
        </param>
        <param>
          <type>C</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/algorithm/transform.hpp" line="40" column="17" bodyfile="taskflow/cuda/algorithm/transform.hpp" bodystart="40" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="taskflow/utility/small_vector.hpp" line="22" column="12"/>
  </compounddef>
</doxygen>
