<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtf_1_1cudaEventBase" kind="class" language="C++" prot="public">
    <compoundname>tf::cudaEventBase</compoundname>
    <basecompoundref refid="cpp/memory/unique_ptr" prot="public" virt="non-virtual">std::unique_ptr&lt; std::remove_pointer_t&lt; cudaEvent_t &gt;, Deleter &gt;</basecompoundref>
    <includes refid="cuda__stream_8hpp" local="no">taskflow/cuda/cuda_stream.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Creator</type>
      </param>
      <param>
        <type>typename Deleter</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classtf_1_1cudaEventBase_1a1f5a2987a83289bce0c40196a7dcebfd" prot="public" static="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; std::remove_pointer_t&lt; cudaEvent_t &gt;, Deleter &gt;</type>
        <definition>using tf::cudaEventBase&lt; Creator, Deleter &gt;::base_type =  std::unique_ptr&lt;std::remove_pointer_t&lt;cudaEvent_t&gt;, Deleter&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
<para>base type for the underlying unique pointer </para>
        </briefdescription>
        <detaileddescription>
<para>This alias provides a shorthand for the underlying <computeroutput><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref></computeroutput> type that manages CUDA event resources with an associated deleter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_stream.hpp" line="92" column="3" bodyfile="taskflow/cuda/cuda_stream.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1cudaEventBase_1a9e3a31b34936c0bb0d798c1316f02696" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>ArgsT</declname>
            <defname>ArgsT</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tf::cudaEventBase&lt; Creator, Deleter &gt;::cudaEventBase</definition>
        <argsstring>(ArgsT &amp;&amp;... args)</argsstring>
        <name>cudaEventBase</name>
        <param>
          <type>ArgsT &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>constructs a <computeroutput>cudaEvent</computeroutput> object by passing the given arguments to the event creator </para>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <computeroutput>cudaEvent</computeroutput> object by passing the given arguments to the event creator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to pass to the event creator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_stream.hpp" line="102" column="12" bodyfile="taskflow/cuda/cuda_stream.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEventBase_1a415c32b4da01f1d6f521f1a66f37ad54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEventBase&lt; Creator, Deleter &gt;::cudaEventBase</definition>
        <argsstring>(cudaEventBase &amp;&amp;)=default</argsstring>
        <name>cudaEventBase</name>
        <param>
          <type><ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>constructs a <computeroutput>cudaEvent</computeroutput> from the given rhs using move semantics </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_stream.hpp" line="110" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEventBase_1a1b3c359ba08130ad8e499a4bbb066448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref> &amp;</type>
        <definition>cudaEventBase&amp; tf::cudaEventBase&lt; Creator, Deleter &gt;::operator=</definition>
        <argsstring>(cudaEventBase &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>assign the rhs to <computeroutput>*this</computeroutput> using move semantics </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_stream.hpp" line="115" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtf_1_1cudaEventBase_1ad6fd8024c195ac7b352d851a78740d90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::cudaEventBase&lt; Creator, Deleter &gt;::cudaEventBase</definition>
        <argsstring>(const cudaEventBase &amp;)=delete</argsstring>
        <name>cudaEventBase</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_stream.hpp" line="119" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1cudaEventBase_1a0f01ff47804060d604d100ebe85d9f0c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref> &amp;</type>
        <definition>cudaEventBase&amp; tf::cudaEventBase&lt; Creator, Deleter &gt;::operator=</definition>
        <argsstring>(const cudaEventBase &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/cuda/cuda_stream.hpp" line="120" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class to create a smart pointer wrapper for managing <computeroutput>cudaEvent_t</computeroutput> </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Creator</parametername>
</parameternamelist>
<parameterdescription>
<para>functor to create the stream (used in constructor) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Deleter</parametername>
</parameternamelist>
<parameterdescription>
<para>functor to delete the stream (used in destructor)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The <computeroutput><ref refid="classtf_1_1cudaEventBase" kindref="compound">cudaEventBase</ref></computeroutput> class encapsulates a <computeroutput>cudaEvent_t</computeroutput> using <computeroutput><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref></computeroutput>, ensuring that CUDA events are properly created and destroyed with a unique ownership. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>tf::cudaEventBase&lt; Creator, Deleter &gt;</label>
        <link refid="classtf_1_1cudaEventBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; std::remove_pointer_t&lt; cudaEvent_t &gt;, Deleter &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>tf::cudaEventBase&lt; Creator, Deleter &gt;</label>
        <link refid="classtf_1_1cudaEventBase"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; std::remove_pointer_t&lt; cudaEvent_t &gt;, Deleter &gt;</label>
      </node>
    </collaborationgraph>
    <location file="taskflow/cuda/cuda_stream.hpp" line="80" column="1" bodyfile="taskflow/cuda/cuda_stream.hpp" bodystart="80" bodyend="121"/>
    <listofallmembers>
      <member refid="classtf_1_1cudaEventBase_1a1f5a2987a83289bce0c40196a7dcebfd" prot="public" virt="non-virtual"><scope>tf::cudaEventBase</scope><name>base_type</name></member>
      <member refid="classtf_1_1cudaEventBase_1a9e3a31b34936c0bb0d798c1316f02696" prot="public" virt="non-virtual"><scope>tf::cudaEventBase</scope><name>cudaEventBase</name></member>
      <member refid="classtf_1_1cudaEventBase_1a415c32b4da01f1d6f521f1a66f37ad54" prot="public" virt="non-virtual"><scope>tf::cudaEventBase</scope><name>cudaEventBase</name></member>
      <member refid="classtf_1_1cudaEventBase_1ad6fd8024c195ac7b352d851a78740d90" prot="private" virt="non-virtual"><scope>tf::cudaEventBase</scope><name>cudaEventBase</name></member>
      <member refid="classtf_1_1cudaEventBase_1a1b3c359ba08130ad8e499a4bbb066448" prot="public" virt="non-virtual"><scope>tf::cudaEventBase</scope><name>operator=</name></member>
      <member refid="classtf_1_1cudaEventBase_1a0f01ff47804060d604d100ebe85d9f0c" prot="private" virt="non-virtual"><scope>tf::cudaEventBase</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
