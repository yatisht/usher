<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structtf_1_1ScalablePipeline_1_1Line" kind="struct" language="C++" prot="private">
    <compoundname>tf::ScalablePipeline::Line</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structtf_1_1ScalablePipeline_1_1Line_1a777bd19b4440c77f9abc5e63debe1874" prot="public" static="no" mutable="no">
        <type><ref refid="cpp/atomic/atomic" kindref="compound" external="/home/thuang295/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::atomic</ref>&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; tf::ScalablePipeline&lt; P &gt;::Line::join_counter</definition>
        <argsstring></argsstring>
        <name>join_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="taskflow/algorithm/pipeline.hpp" line="1078" column="17" bodyfile="taskflow/algorithm/pipeline.hpp" bodystart="1078" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>tf::ScalablePipeline&lt; P &gt;::Line</label>
        <childnode refid="2" relation="usage">
          <edgelabel>join_counter</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::atomic&lt; size_t &gt;</label>
      </node>
    </collaborationgraph>
    <location file="taskflow/algorithm/pipeline.hpp" line="1077" column="3" bodyfile="taskflow/algorithm/pipeline.hpp" bodystart="1077" bodyend="1079"/>
    <listofallmembers>
      <member refid="structtf_1_1ScalablePipeline_1_1Line_1a777bd19b4440c77f9abc5e63debe1874" prot="public" virt="non-virtual"><scope>tf::ScalablePipeline::Line</scope><name>join_counter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
